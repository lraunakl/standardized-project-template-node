#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Running pre-commit checks..."

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
  echo "‚ùå Not in a git repository"
  exit 1
fi

# Run lint-staged for staged files
echo "üé® Linting staged files..."
npx lint-staged

# Check if package-lock.json is in sync with package.json
if [ -f package.json ] && [ -f package-lock.json ]; then
  echo "üì¶ Checking package-lock.json sync..."
  if ! npm ci --dry-run > /dev/null 2>&1; then
    echo "‚ùå package-lock.json is out of sync with package.json"
    echo "Please run 'npm install' to update package-lock.json"
    exit 1
  fi
fi

# Check for forbidden patterns
echo "üîç Checking for forbidden patterns..."
FORBIDDEN_PATTERNS=(
  "console.log"
  "debugger"
  "TODO"
  "FIXME"
  "xxx"
  "HACK"
)

for pattern in "${FORBIDDEN_PATTERNS[@]}"; do
  if git diff --cached --name-only | xargs grep -l "$pattern" 2>/dev/null; then
    echo "‚ö†Ô∏è  Warning: Found '$pattern' in staged files"
    echo "Please remove or replace before committing"
    # Don't exit, just warn
  fi
done

# Check for large files
echo "üìÅ Checking for large files..."
MAX_SIZE=1048576 # 1MB in bytes

while read -r file; do
  if [ -f "$file" ]; then
    size=$(wc -c < "$file")
    if [ "$size" -gt $MAX_SIZE ]; then
      echo "‚ùå File $file is too large (${size} bytes > ${MAX_SIZE} bytes)"
      echo "Please use Git LFS for large files or reduce file size"
      exit 1
    fi
  fi
done < <(git diff --cached --name-only)

# Check for secrets
echo "üîê Checking for potential secrets..."
SECRET_PATTERNS=(
  "password\s*=\s*['\"]\w+['\"]" 
  "api[_-]?key\s*=\s*['\"]\w+['\"]"  
  "secret\s*=\s*['\"]\w+['\"]"     
  "token\s*=\s*['\"]\w+['\"]"      
  "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}" # UUIDs
)

for pattern in "${SECRET_PATTERNS[@]}"; do
  if git diff --cached | grep -qE "$pattern"; then
    echo "‚ùå Potential secret found in staged changes!"
    echo "Pattern: $pattern"
    echo "Please review and use environment variables instead"
    exit 1
  fi
done

echo "‚úÖ Pre-commit checks passed!"
echo "üöÄ Ready to commit"
